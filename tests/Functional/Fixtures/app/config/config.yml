framework:
  secret: fos
  router:
    resource: "%kernel.root_dir%/config/routing.yml"
  test: ~
  session:
    storage_id:  session.test_storage

fos_http_cache:
  cacheable:
    response:
      additional_status:
        - 100
  cache_control:
    rules:
      -
        match:
          path: ^/cached
        headers:
          cache_control: {public: true}
  proxy_client:
    varnish:
      http:
        servers: [127.0.0.1]
        base_url: localhost:8080
  invalidation:
    rules:
      -
        match:
          path: ^/invalidate/path.*
        routes:
          invalidation_path: ~
  tags:
    rules:
      -
        match:
          path: ^/cached/
        tags: [area]
        tag_expressions: ["'area-'~id"]
  user_context:
    user_identifier_headers:
      - Cookie
      - Authorization
    role_provider: ~
    hash_cache_ttl: 60
  test:
    proxy_server:
      varnish:
        config_file: "%kernel.root_dir%/Resources/varnish/fos.vcl"
  flash_message:
    enabled: true
    name: flash_cookie_name
    path: /
    secure: true

monolog:
  handlers:
    main:
      type: stream
      level: debug

security:
  providers:
    in_memory:
      memory:
        users:
          user:  { password: user, roles: 'ROLE_USER' }
  encoders:
    Symfony\Component\Security\Core\User\User: plaintext
  firewalls:
    secured_area:
      pattern:    ^/secured_area
      anonymous:
      logout:
        path:     /secured_area/logout
