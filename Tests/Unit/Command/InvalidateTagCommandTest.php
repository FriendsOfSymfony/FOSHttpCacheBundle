<?php

/**
 * This file is part of the FOSHttpCacheBundle package.
 *
 * Copyright (c) 2014 FOS Team
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace FOS\HttpCacheBundle\Tests\Unit\Command;

use FOS\HttpCacheBundle\Command\InvalidateTagCommand;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Tester\CommandTester;

/**
 * Class InvalidateTagCommandTest
 */
class InvalidateTagCommandTest extends \PHPUnit_Framework_TestCase
{
    /**
     * Test execute missing parameters
     *
     * @expectedException \RuntimeException
     */
    public function testExecuteMissingParameters()
    {
        $invalidator = \Mockery::mock('\FOS\HttpCacheBundle\CacheManager');

        $application = new Application();
        $application->add(new InvalidateTagCommand($invalidator));

        $command = $application->find('fos:httpcache:invalidate:tag');
        $commandTester = new CommandTester($command);
        $commandTester->execute(array('command' => $command->getName()));
    }

    /**
     * test execute parameter
     */
    public function testExecuteParameter()
    {
        $invalidator = \Mockery::mock('\FOS\HttpCacheBundle\CacheManager')
            ->shouldReceive('invalidateTags')->once()->with(array('my-tag'))
            ->getMock()
        ;

        $application = new Application();
        $application->add(new InvalidateTagCommand($invalidator));

        $command = $application->find('fos:httpcache:invalidate:tag');
        $commandTester = new CommandTester($command);
        $commandTester->execute(array(
            'command' => $command->getName(),
            'tags' => array('my-tag'),
        ));

        // the only output should be generated by the listener in verbose mode
        $this->assertEquals('', $commandTester->getDisplay());
    }
}
