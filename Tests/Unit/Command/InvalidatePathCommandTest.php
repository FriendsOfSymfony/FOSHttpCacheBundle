<?php

/**
 * This file is part of the FOSHttpCacheBundle package.
 *
 * Copyright (c) 2014 FOS Team
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace FOS\HttpCacheBundle\Tests\Unit\Command;

use FOS\HttpCacheBundle\Command\InvalidatePathCommand;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Tester\CommandTester;

/**
 * Class InvalidatePathCommandTest
 */
class InvalidatePathCommandTest extends \PHPUnit_Framework_TestCase
{
    /**
     * test execute missing parameters
     *
     * @expectedException \RuntimeException
     */
    public function testExecuteMissingParameters()
    {
        $invalidator = \Mockery::mock('\FOS\HttpCacheBundle\CacheManager');

        $application = new Application();
        $application->add(new InvalidatePathCommand($invalidator));

        $command = $application->find('fos:httpcache:invalidate:path');
        $commandTester = new CommandTester($command);
        $commandTester->execute(array('command' => $command->getName()));
    }

    /**
     * test execture parameter
     */
    public function testExecuteParameter()
    {
        $invalidator = \Mockery::mock('\FOS\HttpCacheBundle\CacheManager')
            ->shouldReceive('invalidatePath')->once()->with('/my/path')
            ->shouldReceive('invalidatePath')->once()->with('/other/path')
            ->getMock()
        ;

        $application = new Application();
        $application->add(new InvalidatePathCommand($invalidator));

        $command = $application->find('fos:httpcache:invalidate:path');
        $commandTester = new CommandTester($command);
        $commandTester->execute(array(
            'command' => $command->getName(),
            'paths' => array('/my/path', '/other/path'),
        ));

        // the only output should be generated by the listener in verbose mode
        $this->assertEquals('', $commandTester->getDisplay());
    }
}
