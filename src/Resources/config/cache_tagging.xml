<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="fos_http_cache.tag_handler.header_formatter" class="FOS\HttpCache\TagHeaderFormatter\CommaSeparatedTagHeaderFormatter" public="false">
            <argument>%fos_http_cache.tag_handler.response_header%</argument>
            <argument>%fos_http_cache.tag_handler.separator%</argument>
        </service>

        <service id="fos_http_cache.http.symfony_response_tagger" class="FOS\HttpCacheBundle\Http\SymfonyResponseTagger" public="true">
            <argument type="collection">
                <argument key="header_formatter" type="service" id="fos_http_cache.tag_handler.header_formatter"/>
                <argument key="strict">%fos_http_cache.tag_handler.strict%</argument>
            </argument>
        </service>

        <service id="FOS\HttpCacheBundle\Http\SymfonyResponseTagger" alias="fos_http_cache.http.symfony_response_tagger" public="true"/>

        <service id="FOS\HttpCache\ResponseTagger" alias="fos_http_cache.http.symfony_response_tagger" public="true"/>

        <service id="fos_http_cache.twig.tag_extension" class="FOS\HttpCacheBundle\Twig\CacheTagExtension">
            <argument id="fos_http_cache.http.symfony_response_tagger" type="service"/>
            <tag name="twig.extension"/>
        </service>

        <service id="fos_http_cache.event_listener.tag" class="FOS\HttpCacheBundle\EventListener\TagListener">
            <argument type="service" id="fos_http_cache.cache_manager" />
            <argument type="service" id="fos_http_cache.http.symfony_response_tagger" />
            <argument type="service" id="fos_http_cache.rule_matcher.cacheable" />
            <argument type="service" id="fos_http_cache.rule_matcher.must_invalidate" />
            <argument type="service" id="fos_http_cache.tag_handler.expression_language" on-invalid="ignore" />
            <tag name="kernel.event_subscriber" />
        </service>

    </services>
</container>
